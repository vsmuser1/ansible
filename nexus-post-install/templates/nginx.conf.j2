user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
  worker_connections 1024;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile            on;
  tcp_nopush          on;
  tcp_nodelay         on;
  keepalive_timeout   5 5;
  types_hash_max_size 2048;

  proxy_send_timeout  120;
  proxy_read_timeout  300;
  proxy_buffering     off;
  proxy_request_buffering off;

  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  # Load modular configuration files from the: /etc/nginx/conf.d directory
  # For more information, see: http://nginx.org/en/docs/ngx_core_module.html#include
  include /etc/nginx/conf.d/*.conf;

  ssl_certificate      /app/nexus/sonatype-work/ssl/{{ dns_subdomain }}-chain.crt;
  ssl_certificate_key  /app/nexus/sonatype-work/ssl/{{ dns_subdomain }}.key;

  # Nexus RM
  server {
    listen   443 ssl;
    server_name  artifacts.{{ dns_subdomain }};

    # allow large uploads of files
    client_max_body_size 1024m;

    # optimize downloading files larger than 1G
    proxy_max_temp_file_size 1024m;

    location / {
      # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
      proxy_pass http://127.0.0.1:8081;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto "https";
    }
  }

  # Nexus RM - repo: docker-all
  server {
    listen   443 ssl;
    server_name  docker.{{ dns_subdomain }};

    # allow large uploads of files
    client_max_body_size 1024m;

    # optimize downloading files larger than 1G
    proxy_max_temp_file_size 1024m;

    location / {
      # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
      proxy_pass http://127.0.0.1:8090;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto "https";
    }
  }

  # Nexus RM - repo: internal-docker-snapshots
  server {
    listen   443 ssl;
    server_name  docker-snapshots.{{ dns_subdomain }};

    # allow large uploads of files
    client_max_body_size 1024m;

    # optimize downloading files larger than 1G
    proxy_max_temp_file_size 1024m;

    location / {
      # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
      proxy_pass http://127.0.0.1:8091;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto "https";
    }
  }

  # Nexus RM - repo: internal-docker-releases
  server {
    listen   443 ssl;
    server_name  docker-releases.{{ dns_subdomain }};

    # allow large uploads of files
    client_max_body_size 1024m;

    # optimize downloading files larger than 1G
    proxy_max_temp_file_size 1024m;

    location / {
      # Use IPv4 upstream address instead of DNS name to avoid attempts by nginx to use IPv6 DNS lookup
      proxy_pass http://127.0.0.1:8092;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto "https";
    }
  }
}
